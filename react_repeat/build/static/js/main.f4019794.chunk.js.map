{"version":3,"sources":["context/AuthContext.js","hooks/http.hook.js","pages/AuthPage.js","hooks/message.hook.js","pages/CreatePage.js","component/LinkCard.js","component/Loader.js","pages/DetailPage.js","component/LinksList.js","pages/LinksPage.js","hooks/auth.hook.js","component/Navbar.js","App.js","routes.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","AuthPage","auth","useContext","text","window","M","toast","html","email","password","form","setForm","useEffect","changeHandler","event","target","name","value","updateTextFields","registerHanlker","loginHanlker","className","htmlFor","placeholder","id","type","onChange","style","marginRight","disabled","onClick","CreatePage","history","useHistory","link","setLink","pressHandler","key","from","Authorization","push","_id","paddingTop","e","onKeyPress","LinkCard","href","to","rel","clicks","Date","toLocaleDateString","Loader","display","justifyContent","DetailPage","linkId","useParams","getLink","fetched","LinksList","links","length","map","index","LinksPage","setLinks","fetchLinks","feched","storageName","Navbar","padding","preventDefault","App","setToken","setUserId","ready","setReady","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRouter","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4019794.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nfunction noop(){}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n})","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setLoading(true);\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers[\"Content-Type\"] = \"application/json\";\r\n        }\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Error Warning\");\r\n        }\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(error.message);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { React, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const message = useMessage();\r\n  const { loading, error, request, clearError } = useHttp();\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  });\r\n\r\n  const registerHanlker = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/register\", \"POST\", { ...form });\r\n      message(data.message);\r\n    } catch (error) {}\r\n  };\r\n  const loginHanlker = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/login\", \"POST\", { ...form });\r\n      auth.login(data.token, data.userId);\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h1>Сократи ссылку</h1>\r\n        <div className=\"card  blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Авторизация</span>\r\n            <div className=\"\">\r\n              <label htmlFor=\"email\">First email</label>\r\n              <input\r\n                placeholder=\"email...\"\r\n                id=\"email\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={form.email}\r\n                onChange={changeHandler}\r\n              />\r\n            </div>\r\n            <div className=\"\">\r\n              <label htmlFor=\"password\">First password</label>\r\n              <input\r\n                placeholder=\"password\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={form.password}\r\n                onChange={changeHandler}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn yellow darken-4 \"\r\n              style={{ marginRight: 10 }}\r\n              disabled={loading}\r\n              onClick={loginHanlker}\r\n            >\r\n              Войти\r\n            </button>\r\n            <button\r\n              className=\"btn grey  lighten-1 black-text\"\r\n              onClick={registerHanlker}\r\n              disabled={loading}\r\n            >\r\n              Регистрация\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useMessage = () => {\r\n  return useCallback((text) => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text });\r\n    }\r\n  }, []);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\n//  тут будем создавать новую ссылку которая будет сокращенной\r\nexport const CreatePage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const { request } = useHttp();\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const pressHandler = async (event) => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request(\r\n          \"/api/link/generate\",\r\n          \"POST\",\r\n          { from: link },\r\n          {\r\n            Authorization: `Bearer ${auth.token}`,\r\n          }\r\n        );\r\n        history.push(`/detail/${data.link._id}`);\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\r\n        <label htmlFor=\"link\">Введите ссылку</label>\r\n        <input\r\n          placeholder=\"Вставьте ссылку\"\r\n          id=\"link\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={link}\r\n          onChange={(e) => setLink(e.target.value)}\r\n          onKeyPress={pressHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const LinkCard = ({link})=>{\r\n    return(\r\n        <div>\r\n            <h2 >Ссылка</h2>\r\n            <p>Твоя ссылка: <a href={link.to} target=\"blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n            <p>Откуда: <a href={link.from} target=\"blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n            <p>Количество кликов по ссылке: <strong>{link.clicks}</strong></p>\r\n            <p>Дата создания: <strong>{new Date(link.data).toLocaleDateString()}</strong></p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n  <div\r\n    style={{ display: \"flex\", justifyContent: \"center\", paddingTop: \"2rem\" }}\r\n  >\r\n    <div className=\"spinner-layer spinner-red\">\r\n      <div className=\"circle-clipper left\">\r\n        <div className=\"circle\" />\r\n      </div>\r\n      <div className=\"gap-patch\">\r\n        <div className=\"circle\"></div>\r\n      </div>\r\n      <div className=\"circle-clipper right\">\r\n        <div className=\"circle\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { LinkCard } from \"../component/LinkCard\";\r\nimport { Loader } from \"../component/Loader\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\n//  страница показывающая ссылку и статистику по ней\r\nexport const DetailPage = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const { request, loading } = useHttp();\r\n  const [link, setLink] = useState(null);\r\n  const linkId = useParams().id;\r\n  // загружаем данные и заекстактиваем ид с url\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      setLink(fetched);\r\n    } catch (error) {}\r\n  }, [token, linkId, request]);\r\n\r\n  useEffect(() => {\r\n    getLink();\r\n  }, [getLink]);\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  return <div>{!loading && link && <LinkCard link={link} />}</div>;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const LinksList = ({ links }) => {\r\n  if (!links.length) {\r\n    return <p className=\"center\"> Ccылок пока нету!!! </p>;\r\n  }\r\n  return (\r\n    <>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>№</th>\r\n            <th>Оригинальная:</th>\r\n            <th>Сокращенная:</th>\r\n            <th>Открыть:</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {links.map((link, index) => {\r\n            return (\r\n              <tr key={link._id}>\r\n                <td>{index + 1}</td>\r\n                <td>{link.from}</td>\r\n                <td>{link.to}</td>\r\n                <td>\r\n                  <Link to={`/detail/${link._id}`}>Открыть</Link>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { LinksList } from \"../component/LinksList\";\r\nimport { Loader } from \"../component/Loader\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n//  тут будут все ссылки пользователя\r\nexport const LinksPage = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const { loading, request } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const fetchLinks = useCallback(async () => {\r\n    try {\r\n      const feched = await request(\"/api/link\", \"GET\", null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      setLinks(feched);\r\n    } catch (error) {}\r\n  }, [token, request]);\r\n\r\n  useEffect(() => {\r\n    fetchLinks();\r\n  }, [fetchLinks]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  return <>{!loading && <LinksList links={links} />}</>;\r\n};\r\n","// хук(модуль который работает только с авторизацией ) позволяющиий нам\r\n//  либо зайтив систему либо выйти\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst storageName = \"useData\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [ready, setReady] = useState(false);\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({\r\n        userId: id,\r\n        token: jwtToken,\r\n      })\r\n    );\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n    if (data && data.token) {\r\n      login(data.token, data.userId);\r\n    }\r\n    setReady(true);\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId, ready };\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const Navbar = () => {\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const logoutHandler = (event) => {\r\n    //   c помощью history мы будем делать навигацию\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper orange  darken-1 \">\r\n        <span className=\"brand-logo\" style={{ padding: \"0 2rem\" }}>\r\n          Сокращения ссылок\r\n        </span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li>\r\n            <NavLink to=\"/create\">Создать</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/links\">Ссылки</NavLink>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\" onClick={logoutHandler}>\r\n              Выйти\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useRouter } from \"./routes\";\nimport { useAuth } from \"./hooks/auth.hook\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Navbar } from \"./component/Navbar\";\nimport { Loader } from \"./component/Loader\";\nimport \"materialize-css\";\n\nfunction App() {\n  const { token, login, logout, userId, ready } = useAuth();\n\n  const isAuthenticated = !!token;\n\n  const routes = useRouter(isAuthenticated);\n\n  if (!ready) {\n    return <Loader />;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        login,\n        logout,\n        userId,\n        isAuthenticated,\n      }}\n    >\n      <Router>\n        {isAuthenticated && <Navbar />}\n        <div className=\"container\">{routes}</div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AuthPage } from \"./pages/AuthPage\";\r\nimport { CreatePage } from \"./pages/CreatePage\";\r\nimport { DetailPage } from \"./pages/DetailPage\";\r\nimport { LinksPage } from \"./pages/LinksPage\";\r\n\r\nexport const useRouter = (isAuthenticated) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/links\" exact>\r\n          <LinksPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}